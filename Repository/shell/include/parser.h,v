head	7.3;
access;
symbols
	CSC60:1.1.1.1 ECS:1.1.1;
locks; strict;
comment	@ * @;


7.3
date	2014.05.19.04.10.59;	author parallels;	state Exp;
branches;
next	7.1;
commitid	10053798452137649CC;

7.1
date	2014.05.02.04.56.11;	author parallels;	state Exp;
branches;
next	6.1;
commitid	1005363256B2C77085D;

6.1
date	2014.04.18.05.13.34;	author parallels;	state Exp;
branches;
next	5.1;
commitid	1005350B47E1D525B15;

5.1
date	2014.04.01.01.11.12;	author parallels;	state Exp;
branches;
next	4.1;
commitid	100533A12300C819CE3;

4.1
date	2014.03.09.06.00.52;	author parallels;	state Exp;
branches;
next	3.1;
commitid	100531C03943D68B573;

3.1
date	2014.03.09.05.17.57;	author parallels;	state Exp;
branches;
next	2.3;
commitid	100531BF9853ADF9391;

2.3
date	2014.03.09.04.06.12;	author parallels;	state Exp;
branches;
next	2.2;
commitid	100531BE8B43694BC96;

2.2
date	2014.03.09.03.38.27;	author parallels;	state Exp;
branches;
next	2.1;
commitid	100531BE23309CD4A3E;

2.1
date	2014.03.06.23.42.32;	author martinj;	state Exp;
branches;
next	1.1;

1.1
date	2014.03.06.23.38.34;	author martinj;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2014.03.06.23.38.34;	author martinj;	state Exp;
branches;
next	;


desc
@@


7.3
log
@Almost Done
@
text
@/***************************************************
	Programmer's name: Joe Martinez
	FileName: parser.h
	Purpose: Define function prototypes to be used in parser.c
	Description: Contains all the functions that make up the object file
        for parser.
     Once the object files are created these prototypes are all that we need.
***************************************************/
/* C Macros to create definitions for maximum number of arguments and things
such as how to know when to use pipe */
#ifndef PARSER_H
#define PARSER_H

#define MAXINPUTLINE 10240
#define MAXARGS 1024
#define PARSE_NOPIPE -1        /* Default is no pipe */
#define PARSE_USEPIPE -2    /* Using pipes, but FD not yet known */


void parse(char *cmdline);
void parse_cmd(char *cmdpart);
void splitcmd(char *cmdpart, char *args[]);
char *expandtilde(char *str);
void freeargs(char *args[]);
void argsdelete(char *args[]);
char *parseredir(char oper, char *args[]);
int checkbackground(char *cmdline);
char *gethomedir(void);
char *getuserhomedir(char *user);

#endif
@


7.1
log
@Not done
@
text
@@


6.1
log
@Search not working
@
text
@@


5.1
log
@History Functions
@
text
@@


4.1
log
@finished assignment 3
@
text
@@


3.1
log
@new .a files in lib directory
@
text
@@


2.3
log
@jmsh?
@
text
@@


2.2
log
@jmsh edit
@
text
@@


2.1
log
@Log message
@
text
@@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@First import
@
text
@@
