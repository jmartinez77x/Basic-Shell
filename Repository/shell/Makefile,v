head	7.3;
access;
symbols
	CSC60:1.1.1.1 ECS:1.1.1;
locks; strict;
comment	@# @;


7.3
date	2014.05.19.04.10.58;	author parallels;	state Exp;
branches;
next	7.1;
commitid	10053798452137649CC;

7.1
date	2014.05.02.04.56.11;	author parallels;	state Exp;
branches;
next	6.1;
commitid	1005363256B2C77085D;

6.1
date	2014.04.18.05.13.34;	author parallels;	state Exp;
branches;
next	5.1;
commitid	1005350B47E1D525B15;

5.1
date	2014.04.01.01.11.12;	author parallels;	state Exp;
branches;
next	4.1;
commitid	100533A12300C819CE3;

4.1
date	2014.03.09.06.00.52;	author parallels;	state Exp;
branches;
next	3.1;
commitid	100531C03943D68B573;

3.1
date	2014.03.09.05.17.57;	author parallels;	state Exp;
branches;
next	2.3;
commitid	100531BF9853ADF9391;

2.3
date	2014.03.09.04.06.12;	author parallels;	state Exp;
branches;
next	2.2;
commitid	100531BE8B43694BC96;

2.2
date	2014.03.09.03.38.27;	author parallels;	state Exp;
branches;
next	2.1;
commitid	100531BE23309CD4A3E;

2.1
date	2014.03.06.23.42.32;	author martinj;	state Exp;
branches;
next	1.1;

1.1
date	2014.03.06.23.38.34;	author martinj;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2014.03.06.23.38.34;	author martinj;	state Exp;
branches;
next	;


desc
@@


7.3
log
@Almost Done
@
text
@#Programmer's name: Joe Martinez

# Beginning of Makefile
LIB = lib/libparser.a lib/libshutil.a lib/libparser.so lib/libshutil.so
OBJS = obj/shutil.o obj/parser.o obj/sshell.o obj/variables.o obj/hash_table.o 
HEADER_FILES = include/shell.h include/parser.h include/variables.h include/hash_table.h 
EXECUTABLE = simpleshell
CFLAGS = -Wall
LIBCFLAGS = $(CFLAGS) -D_REENTRANT -fPIC
CC = gcc
# End of configuration options

#What needs to be built to make all files and dependencies
all: $(EXECUTABLE)

#Create the main executable
$(EXECUTABLE): lib $(LIB) $(OBJS)
	$(CC) -o $(EXECUTABLE) $(OBJS)

#Create .a files in /lib directory
lib/libparser.a : obj/parser.o	
	ar cr lib/libparser.a obj/parser.o
	ranlib lib/libparser.a

lib/libshutil.a : obj/shutil.o	
	ar cr lib/libshutil.a obj/shutil.o
	ranlib lib/libshutil.a

#Create .so files in /lib directory
lib/libparser.so : obj/parser.o
	$(CC) -shared -o $@@ obj/parser.o -lc

lib/libshutil.so : obj/shutil.o
	$(CC) -shared -o $@@ obj/shutil.o -lc

record: obj/record.o
	$(CC) -o record obj/record.o

#Recursively build object files
obj/%.o: src/%.c
	$(CC) $(LIBCFLAGS)  -c -Iinclude -o $@@ $<

#Define dependencies for objects based on header files
#We are overly conservative here, parser.o should depend on parser.h only
$(OBJS) : $(HEADER_FILES) 

clean:
	-rm -f $(EXECUTABLE) record obj/*.o lib/*.a lib/*.so bin/record
run: 
	make record
	#(export LD_LIBRARY_PATH=~/.bashrc; ./record)
	make $(EXECUTABLE)
	(export LD_LIBRARY_PATH=lib; ./$(EXECUTABLE))

tarball:
	#(cd .. ; tar czf Martinez_Joe_a6.tar.z shell)

car:
	@@echo '           __---~~~~~~--__                      __--~~~~~~---__'
	@@echo '           \---~~~~~~~~~~\\                    //~~~~~~~~~~---/'
	@@echo '            \/~~~~~~~~~~~\||                  ||/~~~~~~~~~~~\/'
	@@echo '                          `\\                //'
	@@echo '                            `\\            //'
	@@echo '                              ||          ||  '
	@@echo '                         _--~~~~~~~~~~~~~~~~~~--_ '
	@@echo '               ___    _-~                        ~-_    ___'
	@@echo '               \__)\/~                              ~\/(__/' 
	@@echo '               _--`-___                            ___-`--_'
	@@echo '             /~     `\ ~~~~~~~~------------~~~~~~~~ /`     ~\'
	@@echo '            /|        `\         ________         /`        |\'
	@@echo '           | `\   ______`\_      \------/      _/`______   /` |' 
	@@echo '           |   `\_~-_____\ ~-________________-~ /_____-~_/`   |'
	@@echo '           `.     ~-__________________________________-~     .'
	@@echo '            `.      [_______/------|~~|------\_______]      .'
	@@echo '             `\--___((____)(________\/________)(____))___--/'
	@@echo '              |>>>>>>||                            ||<<<<<<|'
	@@echo '              `\<<<<</`                            `\>>>>>/'	

# End of Makefile@


7.1
log
@Not done
@
text
@d51 1
a51 1
	(export LD_LIBRARY_PATH=~/.bashrc; ./record)
d56 1
a56 2
	-rm -f $(EXECUTABLE) *.o 
	(cd .. ; tar czf Your_Name_a3.tar.z shell )
@


6.1
log
@Search not working
@
text
@d5 2
a6 2
OBJS = obj/shutil.o obj/parser.o obj/sshell.o obj/variables.o obj/hash_table.o
HEADER_FILES = include/shell.h include/parser.h include/variables.h include/hash_table.h
d18 1
a18 1
	$(CC) -o $(EXECUTABLE) $(OBJS) 
d36 3
d45 1
a45 1
$(OBJS) : $(HEADER_FILES)
d48 1
a48 1
	-rm -f $(EXECUTABLE) obj/*.o lib/*.a lib/*.so
d50 2
a53 1
#	./$(EXECUTABLE)
@


5.1
log
@History Functions
@
text
@d5 2
a6 2
OBJS = obj/shutil.o obj/parser.o obj/sshell.o
HEADER_FILES = include/shell.h include/parser.h
d55 20
a74 1
# End of Makefile
d76 1
@


4.1
log
@finished assignment 3
@
text
@@


3.1
log
@new .a files in lib directory
@
text
@d4 1
d9 1
d17 2
a18 2
$(EXECUTABLE): lib lib/libparser.a lib/libshutil.a $(OBJS)
	$(CC) -o $(EXECUTABLE) $(OBJS)
d29 7
d38 1
a38 1
	$(CC) $(CFLAGS)  -c -Iinclude -o $@@ $<
d45 5
a49 3
	-rm -f $(EXECUTABLE) obj/*.o lib/*.a
run: $(EXECUTABLE)
	./$(EXECUTABLE)
@


2.3
log
@jmsh?
@
text
@d15 1
a15 1
$(EXECUTABLE): $(OBJS)
d18 9
a32 4
#obj/shutil.o : src/shutil.c
#obj/parser.o : src/parser.c
#obj/sshell.o : src/sshell.c
#$(EXECUTABLE) : obj/shutil.o obj/parser.o obj/sshell.o
d36 1
a36 1
	-rm -f $(EXECUTABLE) obj/*.o 
@


2.2
log
@jmsh edit
@
text
@@


2.1
log
@Log message
@
text
@@


1.1
log
@Initial revision
@
text
@d1 2
@


1.1.1.1
log
@First import
@
text
@@
